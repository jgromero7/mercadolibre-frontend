html, body, h1, h2, h3, h4, h5, h6, p {
    margin: 0;
    padding: 0;
    border: 0;
    outline: 0;
    font-size: 100%;
    vertical-align: baseline;
    background: transparent;
}

html {
    background-color: #EDEDED;
}

$grid-cols: 12;
$grid-bp-xs: 576;
$grid-bp-md: 768;
$grid-bp-lg: 992;
$grid-bp-xl: 1200;
$map-grid-props: (
    '-default': 0,
    '-xs': $grid-bp-xs,
    '-md': $grid-bp-md,
    '-lg': $grid-bp-lg,
    '-xl': $grid-bp-xl,
);

@mixin create-mq($breakpoint) {
    @if($breakpoint == 0) {
        @content;
    } @else {
        @media screen and (min-width: $breakpoint * 1px) {
          @content;
        }
    }
}

@mixin create-grid-col($size, $grid-cols, $breakpoint) {
    @include create-mq($breakpoint) {
        @for $i from 1 through $grid-cols {
            &-col#{$size}-#{$i} {
                flex-basis: (100 / ($grid-cols / $i) ) * 1%;
            }
        }
    }
}

.grid {
    padding: 0px 60px;
    max-width: 1200 * 1px;
    margin: 0 auto;
    
    &-fluid {
      margin: 0;
      max-width: 100%;
    }

    &-row {
        display: flex;
        flex-wrap: wrap;
        width: 100%;
    }

    @each $size , $breakpoint in $map-grid-props {
        @include create-grid-col($size, $grid-cols, $breakpoint);
    }

    @media only screen and (max-width: 576px) {
        padding: 0px 30px;
    }
}
